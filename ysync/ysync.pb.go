// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.5.1
// source: protoc/ysync.proto

package ysync

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SyncCode int32

const (
	SyncCode_SYNC_SUCCESS SyncCode = 0
	SyncCode_SYNC_ERROR   SyncCode = 1
)

// Enum value maps for SyncCode.
var (
	SyncCode_name = map[int32]string{
		0: "SYNC_SUCCESS",
		1: "SYNC_ERROR",
	}
	SyncCode_value = map[string]int32{
		"SYNC_SUCCESS": 0,
		"SYNC_ERROR":   1,
	}
)

func (x SyncCode) Enum() *SyncCode {
	p := new(SyncCode)
	*p = x
	return p
}

func (x SyncCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protoc_ysync_proto_enumTypes[0].Descriptor()
}

func (SyncCode) Type() protoreflect.EnumType {
	return &file_protoc_ysync_proto_enumTypes[0]
}

func (x SyncCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncCode.Descriptor instead.
func (SyncCode) EnumDescriptor() ([]byte, []int) {
	return file_protoc_ysync_proto_rawDescGZIP(), []int{0}
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_ysync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_ysync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_protoc_ysync_proto_rawDescGZIP(), []int{0}
}

func (x *SyncRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SyncRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SyncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      SyncCode `protobuf:"varint,1,opt,name=Code,proto3,enum=ysync.SyncCode" json:"Code,omitempty"`
	Logs      []string `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs,omitempty"`
	LastIndex int32    `protobuf:"varint,3,opt,name=LastIndex,proto3" json:"LastIndex,omitempty"`
}

func (x *SyncReply) Reset() {
	*x = SyncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_ysync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReply) ProtoMessage() {}

func (x *SyncReply) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_ysync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReply.ProtoReflect.Descriptor instead.
func (*SyncReply) Descriptor() ([]byte, []int) {
	return file_protoc_ysync_proto_rawDescGZIP(), []int{1}
}

func (x *SyncReply) GetCode() SyncCode {
	if x != nil {
		return x.Code
	}
	return SyncCode_SYNC_SUCCESS
}

func (x *SyncReply) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *SyncReply) GetLastIndex() int32 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

var File_protoc_ysync_proto protoreflect.FileDescriptor

var file_protoc_ysync_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x79, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x79, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x37, 0x0a, 0x0b, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x62, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x23, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x79, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61,
	0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2a, 0x2c, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x32, 0x3d, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x32, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x79, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x79, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x79, 0x73, 0x79, 0x6e, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protoc_ysync_proto_rawDescOnce sync.Once
	file_protoc_ysync_proto_rawDescData = file_protoc_ysync_proto_rawDesc
)

func file_protoc_ysync_proto_rawDescGZIP() []byte {
	file_protoc_ysync_proto_rawDescOnce.Do(func() {
		file_protoc_ysync_proto_rawDescData = protoimpl.X.CompressGZIP(file_protoc_ysync_proto_rawDescData)
	})
	return file_protoc_ysync_proto_rawDescData
}

var file_protoc_ysync_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protoc_ysync_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protoc_ysync_proto_goTypes = []interface{}{
	(SyncCode)(0),       // 0: ysync.SyncCode
	(*SyncRequest)(nil), // 1: ysync.SyncRequest
	(*SyncReply)(nil),   // 2: ysync.SyncReply
}
var file_protoc_ysync_proto_depIdxs = []int32{
	0, // 0: ysync.SyncReply.Code:type_name -> ysync.SyncCode
	1, // 1: ysync.LogSync.Sync:input_type -> ysync.SyncRequest
	2, // 2: ysync.LogSync.Sync:output_type -> ysync.SyncReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protoc_ysync_proto_init() }
func file_protoc_ysync_proto_init() {
	if File_protoc_ysync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protoc_ysync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_ysync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protoc_ysync_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protoc_ysync_proto_goTypes,
		DependencyIndexes: file_protoc_ysync_proto_depIdxs,
		EnumInfos:         file_protoc_ysync_proto_enumTypes,
		MessageInfos:      file_protoc_ysync_proto_msgTypes,
	}.Build()
	File_protoc_ysync_proto = out.File
	file_protoc_ysync_proto_rawDesc = nil
	file_protoc_ysync_proto_goTypes = nil
	file_protoc_ysync_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogSyncClient is the client API for LogSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogSyncClient interface {
	Sync(ctx context.Context, opts ...grpc.CallOption) (LogSync_SyncClient, error)
}

type logSyncClient struct {
	cc grpc.ClientConnInterface
}

func NewLogSyncClient(cc grpc.ClientConnInterface) LogSyncClient {
	return &logSyncClient{cc}
}

func (c *logSyncClient) Sync(ctx context.Context, opts ...grpc.CallOption) (LogSync_SyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogSync_serviceDesc.Streams[0], "/ysync.LogSync/Sync", opts...)
	if err != nil {
		return nil, err
	}
	x := &logSyncSyncClient{stream}
	return x, nil
}

type LogSync_SyncClient interface {
	Send(*SyncRequest) error
	Recv() (*SyncReply, error)
	grpc.ClientStream
}

type logSyncSyncClient struct {
	grpc.ClientStream
}

func (x *logSyncSyncClient) Send(m *SyncRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *logSyncSyncClient) Recv() (*SyncReply, error) {
	m := new(SyncReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogSyncServer is the server API for LogSync service.
type LogSyncServer interface {
	Sync(LogSync_SyncServer) error
}

// UnimplementedLogSyncServer can be embedded to have forward compatible implementations.
type UnimplementedLogSyncServer struct {
}

func (*UnimplementedLogSyncServer) Sync(LogSync_SyncServer) error {
	return status.Errorf(codes.Unimplemented, "method Sync not implemented")
}

func RegisterLogSyncServer(s *grpc.Server, srv LogSyncServer) {
	s.RegisterService(&_LogSync_serviceDesc, srv)
}

func _LogSync_Sync_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LogSyncServer).Sync(&logSyncSyncServer{stream})
}

type LogSync_SyncServer interface {
	Send(*SyncReply) error
	Recv() (*SyncRequest, error)
	grpc.ServerStream
}

type logSyncSyncServer struct {
	grpc.ServerStream
}

func (x *logSyncSyncServer) Send(m *SyncReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *logSyncSyncServer) Recv() (*SyncRequest, error) {
	m := new(SyncRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LogSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ysync.LogSync",
	HandlerType: (*LogSyncServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Sync",
			Handler:       _LogSync_Sync_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protoc/ysync.proto",
}
